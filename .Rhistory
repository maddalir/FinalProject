old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPE[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPE[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPE[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPE[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPE[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
old_storms$EVTYPE[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
old_storms$EVTYPE[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPE[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPE[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPE[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPE[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPE[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPE[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPE[grep("*ICE*|*ICY*|*FROST*", old_storms$EVTYPE)] <- "ICE"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- old_storms[complete.cases(old_storms),]
rm(old_storms)
#grep "^.*[0-9]\{1,\}\/[0-9][0-9]\/20*" repdata-data-StormData.csv > 2000data.txt
#awk -F "," '{print $2,"\,",$7,"\,",$8,"\,",$23,"\,",$33,"\,",$34}' 2000data.txt > result.txt
#storms <- read.csv("repdata-data-StormData.csv",nrow=10000)
#valid_events <- c("WINTER WEATHER","LIGHTNING","THUNDERSTORM","TORNADO")
#valid_events <- c("TORNADO","HAIL","TSTM WIND")
valid_events  <- c("TORNADO","WIND","FLOOD","SNOW","FIRE","ICE")
storms <- storms[as.character(storms$EVTYPE) %in% valid_events,]
storms$EVTYPEC = recode(storms$EVTYPE, "'TORNADO'=1; 'WIND'=2; 'FLOOD'=3; 'SNOW'=4; 'FIRE'=5; 'ICE'=6;",  as.factor.result=FALSE)
range(storms$EVTYPEC)
pal <- colorNumeric(palette = "Blues",domain = 1:6)
pal <- colorNumeric(palette = "Blues",domain = storms$EVTYPEC)
pal <- colorNumeric(palette = "Blues",domain = storms$EVTYPE)
pal <- colorNumeric(palette = "Blues",domain = storms$EVTYPEC)
install.packages("scales")
install.packages("scales")
install.packages("scales")
shiny::runApp()
packageVersion("scales")
install.package.version("scales",2.5)
shiny::runApp()
update.packages(ask = FALSE, repos = 'http://cran.rstudio.com')
shiny::runApp()
remove.packages(scales)
remove.packages("scales)
remove.packages("scales")
packageVersion("scales")
install.package("scales")
install.packagespackage("scales")
install.packagespackage("scale")
install.packages("scale")
install.packages("Scale")
packageVersion("scales")
packageVersion("Scales")
library(scale)
packageVersion("leaflet")
shiny::runApp()
library(scales)
install.packages("scales")
install.packages("scales")
install.packages("scales")
packageVersion("scales")
remove.packages("scales")
packageVersion("scales")
install.packages("scales")
packageVersion("scales")
shiny::runApp()
shiny::runApp()
data(state)
#old_storms <- read.csv("result.txt",strip.white=TRUE,fill=TRUE,nrow=90000,colClasses = c("Date","character", "character", "numeric","numeric","numeric"))
old_storms <- read.csv("result2010.txt",strip.white=TRUE,fill=TRUE)
col_names <- c("BGN_DATE","STATE","EVTYPE","FATALITIES","LATITUDE","LONGITUDE" )
colnames(old_storms) <- col_names
old_storms$Date <- as.Date(sapply(strsplit(as.character(old_storms$BGN_DATE),' '),
function(x) {x[[1]]}),format = '%m/%d/%Y')
old_storms$Year <- year(old_storms$Date)
old_storms$Month <- months.Date(old_storms$Date)
old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPE[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPE[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPE[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPE[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPE[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
old_storms$EVTYPE[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
old_storms$EVTYPE[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPE[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPE[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPE[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPE[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPE[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPE[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPE[grep("*ICE*|*ICY*|*FROST*", old_storms$EVTYPE)] <- "ICE"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- old_storms[complete.cases(old_storms),]
rm(old_storms)
#grep "^.*[0-9]\{1,\}\/[0-9][0-9]\/20*" repdata-data-StormData.csv > 2000data.txt
#awk -F "," '{print $2,"\,",$7,"\,",$8,"\,",$23,"\,",$33,"\,",$34}' 2000data.txt > result.txt
#storms <- read.csv("repdata-data-StormData.csv",nrow=10000)
#valid_events <- c("WINTER WEATHER","LIGHTNING","THUNDERSTORM","TORNADO")
#valid_events <- c("TORNADO","HAIL","TSTM WIND")
valid_events  <- c("TORNADO","WIND","FLOOD","SNOW","FIRE","ICE")
storms <- storms[as.character(storms$EVTYPE) %in% valid_events,]
table(storms$EVTYPE)
shiny::runApp()
shiny::runApp()
data(state)
#old_storms <- read.csv("result.txt",strip.white=TRUE,fill=TRUE,nrow=90000,colClasses = c("Date","character", "character", "numeric","numeric","numeric"))
old_storms <- read.csv("result2010.txt",strip.white=TRUE,fill=TRUE)
col_names <- c("BGN_DATE","STATE","EVTYPE","FATALITIES","LATITUDE","LONGITUDE" )
colnames(old_storms) <- col_names
old_storms$Date <- as.Date(sapply(strsplit(as.character(old_storms$BGN_DATE),' '),
function(x) {x[[1]]}),format = '%m/%d/%Y')
old_storms$Year <- year(old_storms$Date)
old_storms$Month <- months.Date(old_storms$Date)
old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPE[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPE[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPE[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPE[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPE[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
old_storms$EVTYPE[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
old_storms$EVTYPE[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPE[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPE[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPE[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPE[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPE[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPE[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPE[grep("*ICE*|*ICY*|*FROST*", old_storms$EVTYPE)] <- "ICE"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- old_storms[complete.cases(old_storms),]
rm(old_storms)
#grep "^.*[0-9]\{1,\}\/[0-9][0-9]\/20*" repdata-data-StormData.csv > 2000data.txt
#awk -F "," '{print $2,"\,",$7,"\,",$8,"\,",$23,"\,",$33,"\,",$34}' 2000data.txt > result.txt
#storms <- read.csv("repdata-data-StormData.csv",nrow=10000)
#valid_events <- c("WINTER WEATHER","LIGHTNING","THUNDERSTORM","TORNADO")
#valid_events <- c("TORNADO","HAIL","TSTM WIND")
valid_events  <- c("TORNADO","WIND","FLOOD","SNOW","FIRE","ICE")
storms <- storms[as.character(storms$EVTYPE) %in% valid_events,]
table(storms$EVTYPE,storms$state)
table(storms$EVTYPE)
stormsF <- storms[storms$EVTYPE == "FIRE",]
table(stormsF$state)
stormsF <- storms[storms$EVTYPE == "FLOOD",]
table(stormsF$state)
table(storms$EVTYPE)
stormsF <- storms[storms$EVTYPE == "FIRE",]
head(stormsF)
head(stormsF,20)
shiny::runApp()
shiny::runApp()
shiny::runApp()
old_storms <- read.csv("result2010.txt",strip.white=TRUE,fill=TRUE)
col_names <- c("BGN_DATE","STATE","EVTYPE","FATALITIES","LATITUDE","LONGITUDE" )
colnames(old_storms) <- col_names
old_storms$Date <- as.Date(sapply(strsplit(as.character(old_storms$BGN_DATE),' '),
function(x) {x[[1]]}),format = '%m/%d/%Y')
old_storms$Year <- year(old_storms$Date)
old_storms$Month <- months.Date(old_storms$Date)
old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPE[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPE[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPE[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPE[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPE[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
old_storms$EVTYPE[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
old_storms$EVTYPE[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPE[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPE[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPE[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPE[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPE[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPE[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPE[grep("*ICE*|*ICY*|*FROST*", old_storms$EVTYPE)] <- "ICE"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- old_storms[complete.cases(old_storms),]
rm(old_storms)
#grep "^.*[0-9]\{1,\}\/[0-9][0-9]\/20*" repdata-data-StormData.csv > 2000data.txt
#awk -F "," '{print $2,"\,",$7,"\,",$8,"\,",$23,"\,",$33,"\,",$34}' 2000data.txt > result.txt
#storms <- read.csv("repdata-data-StormData.csv",nrow=10000)
#valid_events <- c("WINTER WEATHER","LIGHTNING","THUNDERSTORM","TORNADO")
#valid_events <- c("TORNADO","HAIL","TSTM WIND")
valid_events  <- c("TORNADO","FLOOD","SNOW","ICE","WIND")
storms$EVTYPESTRING = paste(storms$EVTYPE,storms$Date,"-")
storms <- storms[as.character(storms$EVTYPE) %in% valid_events,]
storms$EVTYPEC = recode(storms$EVTYPE, "'TORNADO'=1; 'WIND'=2; 'FLOOD'=3; 'SNOW'=4; 'FIRE'=5; 'ICE'=6;",  as.factor.result=FALSE)
print("range complete")
#pal <- colorNumeric(palette = "Blues",domain = 1:6)
print("colorNumeric complete")
#storms$EVTYPEC <- mapvalues(storms$EVTYPE, from = valid_events , to = c("1", "2","3","4","5","6"))
storms <- storms[as.character(storms$STATE) %in% state.abb,]
table(storms$EVTYPE)
xtabs(storms$EVTYPE,storms$statae)
xtabs(storms$EVTYPE,storms$state)
data(state)
#old_storms <- read.csv("result.txt",strip.white=TRUE,fill=TRUE,nrow=90000,colClasses = c("Date","character", "character", "numeric","numeric","numeric"))
old_storms <- read.csv("result2010.txt",strip.white=TRUE,fill=TRUE)
col_names <- c("BGN_DATE","STATE","EVTYPE","FATALITIES","LATITUDE","LONGITUDE" )
colnames(old_storms) <- col_names
old_storms$Date <- as.Date(sapply(strsplit(as.character(old_storms$BGN_DATE),' '),
function(x) {x[[1]]}),format = '%m/%d/%Y')
old_storms$Year <- year(old_storms$Date)
old_storms$Month <- months.Date(old_storms$Date)
old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
#print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPE[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPE[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPE[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPE[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPE[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
old_storms$EVTYPE[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
old_storms$EVTYPE[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPE[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPE[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPE[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPE[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPE[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPE[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPE[grep("*ICE*|*ICY*|*FROST*", old_storms$EVTYPE)] <- "ICE"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- old_storms[complete.cases(old_storms),]
xtabs(storms$EVTYPE,storms$STATE)
xtabs(storms$EVTYPE)
old_storms <- read.csv("result2010.txt",strip.white=TRUE,fill=TRUE)
col_names <- c("BGN_DATE","STATE","EVTYPE","FATALITIES","LATITUDE","LONGITUDE" )
colnames(old_storms) <- col_names
old_storms$Date <- as.Date(sapply(strsplit(as.character(old_storms$BGN_DATE),' '),
function(x) {x[[1]]}),format = '%m/%d/%Y')
old_storms$Year <- year(old_storms$Date)
old_storms$Month <- months.Date(old_storms$Date)
old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
#print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPEN <- "OTHER"
old_storms$EVTYPEN[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPEN[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPEN[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPEN[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPEN[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
old_storms$EVTYPEN[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
old_storms$EVTYPEN[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPEN[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPEN[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPEN[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPEN[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPEN[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPEN[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPEN[grep("*ICE*|*ICY*|*FROST*", old_storms$EVTYPE)] <- "ICE"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- old_storms[complete.cases(old_storms),]
xtabs(storms$EVTYPEN)
str(storms)
table(storms$EVTYPEN)
storms <- old_storms[complete.cases(old_storms),]
table(storms$EVTYPEN)
storms <- storms[as.character(storms$STATE) %in% state.abb,]
table(storms$EVTYPEN)
library(gmodels)
install.packages(gmodels)
install.packages("gmodels")
library(gmodels)
CrossTable(storms$EVTYPEN,storms$STATE)
xtabs(storms$EVTYPEN)
str(storms$EVTYPEN)
hist(storms$STATE,freq =storms$EVTYPEN)
hist(storms$STATE,x=storms$EVTYPEN)
plot(storms$STATE,storms$EVTYPEN)
plot(x=storms$STATE,y=storms$EVTYPEN)
plot(x=storms$STATE,storms$EVTYPEN)
table(storms$EVTYPEN)
shiny::runApp()
data(state)
old_storms <- read.csv("result2010.txt",strip.white=TRUE,fill=TRUE)
col_names <- c("BGN_DATE","STATE","EVTYPE","FATALITIES","LATITUDE","LONGITUDE" )
colnames(old_storms) <- col_names
old_storms$Date <- as.Date(sapply(strsplit(as.character(old_storms$BGN_DATE),' '),
function(x) {x[[1]]}),format = '%m/%d/%Y')
old_storms$Year <- year(old_storms$Date)
old_storms$Month <- months.Date(old_storms$Date)
old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
#print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPEN <- "OTHER"
old_storms$EVTYPEN[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPEN[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPEN[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPEN[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPEN[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
old_storms$EVTYPEN[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
old_storms$EVTYPEN[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPEN[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPEN[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPEN[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPEN[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPEN[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPEN[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPEN[grep("*ICE*|*ICY*|*FROST*", old_storms$EVTYPE)] <- "ICE"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- storms[as.character(storms$STATE) %in% state.abb,]
storms <- storms[complete.cases(storms),]
#rm(old_storms)
#grep "^.*[0-9]\{1,\}\/[0-9][0-9]\/20*" repdata-data-StormData.csv > 2000data.txt
#awk -F "," '{print $2,"\,",$7,"\,",$8,"\,",$23,"\,",$33,"\,",$34}' 2000data.txt > result.txt
#storms <- read.csv("repdata-data-StormData.csv",nrow=10000)
#valid_events <- c("WINTER WEATHER","LIGHTNING","THUNDERSTORM","TORNADO")
#valid_events <- c("TORNADO","HAIL","TSTM WIND")
valid_events  <- c("TORNADO","FLOOD","STORM")
table(storms$EVTYPEN)
stormsS <- storms[storms$EVTYPE == "STORM",]
head(stormsS,10)
head(storms,10)
stormsS <- storms[storms$EVTYPE == "TORNADO",]
head(stormsS,10)
stormsS <- storms[storms$EVTYPE == "STORM ",]
head(stormsS,10)
stormsS <- storms[storms$EVTYPE == "STORM",]
head(stormsS,10)
data(state)
old_storms <- read.csv("result2010.txt",strip.white=TRUE,fill=TRUE)
col_names <- c("BGN_DATE","STATE","EVTYPE","FATALITIES","LATITUDE","LONGITUDE" )
colnames(old_storms) <- col_names
old_storms$Date <- as.Date(sapply(strsplit(as.character(old_storms$BGN_DATE),' '),
function(x) {x[[1]]}),format = '%m/%d/%Y')
old_storms$Year <- year(old_storms$Date)
old_storms$Month <- months.Date(old_storms$Date)
old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
#print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPEN <- "OTHER"
old_storms$EVTYPEN[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPEN[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPEN[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPEN[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPEN[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
old_storms$EVTYPEN[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
old_storms$EVTYPEN[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPEN[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPEN[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPEN[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPEN[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPEN[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPEN[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPEN[grep("*ICE*|*ICY*|*FROST*", old_storms$EVTYPE)] <- "ICE"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
#old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- storms[as.character(storms$STATE) %in% state.abb,]
storms <- storms[complete.cases(storms),]
table(storms$EVTYPEN)
stormsS <- storms[storms$EVTYPEN == "STORM",]
head(stormsS,10)
old_storms <- read.csv("result2010.txt",strip.white=TRUE,fill=TRUE)
col_names <- c("BGN_DATE","STATE","EVTYPE","FATALITIES","LATITUDE","LONGITUDE" )
colnames(old_storms) <- col_names
old_storms$Date <- as.Date(sapply(strsplit(as.character(old_storms$BGN_DATE),' '),
function(x) {x[[1]]}),format = '%m/%d/%Y')
old_storms$Year <- year(old_storms$Date)
old_storms$Month <- months.Date(old_storms$Date)
old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
#print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPEN <- "OTHER"
old_storms$EVTYPEN[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPEN[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPEN[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPEN[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPEN[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
old_storms$EVTYPEN[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
old_storms$EVTYPEN[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPEN[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPEN[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPEN[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPEN[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPEN[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPEN[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPEN[grep("*ICE*|*ICY*|*FROST*", old_storms$EVTYPE)] <- "ICE"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
#old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- storms[as.character(storms$STATE) %in% state.abb,]
storms <- storms[complete.cases(storms),]
stormsS <- storms[storms$EVTYPEN == "STORM",]
head(stormsS,10)
valid_events  <- c("TORNADO","FLOOD","STORM")
storms$EVTYPESTRING = paste(storms$EVTYPEN,storms$Date,"-")
storms <- storms[as.character(storms$EVTYPEN) %in% valid_events,]
stormsS <- storms[storms$EVTYPEN == "STORM",]
head(stormsS,10)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rm(old_storms)
rm(storms)
pal <- colorNumeric(palette = "Blues",domain = 1:3)
chooseCRANmirror()
install.packages("scales")
install.packages("scales")
install.packages("scales")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
old_storms <- read.csv("result2010.txt",strip.white=TRUE,fill=TRUE,nrow=-1)
col_names <- c("BGN_DATE","STATE","EVTYPE","FATALITIES","LATITUDE","LONGITUDE" )
colnames(old_storms) <- col_names
old_storms$Date <- as.Date(sapply(strsplit(as.character(old_storms$BGN_DATE),' '),
function(x) {x[[1]]}),format = '%m/%d/%Y')
old_storms$Year <- year(old_storms$Date)
old_storms$Month <- months.Date(old_storms$Date)
old_storms$MonthF <- factor(old_storms$Month,levels=month.name)
#print("Date Complete")
old_storms$EVTYPE <- toupper(old_storms$EVTYPE)
old_storms$EVTYPEN <- "OTHER"
old_storms$EVTYPEN[grep("*TORNADO*", old_storms$EVTYPE)] <- "TORNADO"
old_storms$EVTYPEN[grep("*HURRICANE*|*TYPHOON*", old_storms$EVTYPE)] <- "HURRICANE"
old_storms$EVTYPEN[grep("*WIND*", old_storms$EVTYPE)] <- "WIND"
old_storms$EVTYPEN[grep("*FIRE*", old_storms$EVTYPE)] <- "FIRE"
old_storms$EVTYPEN[grep("*STORM*|*GLAZE*|*HAIL*|*WETNESS*|*LIGHTNING*|*RAIN*|*BLIZZARD*", old_storms$EVTYPE)] <- "STORM"
#old_storms$EVTYPEN[grep("*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
#old_storms$EVTYPEN[grep("*SNOW*", old_storms$EVTYPE)] <- "SNOW"
old_storms$EVTYPEN[grep("*FLOOD*|*STREAM*|*HIGH WATER*", old_storms$EVTYPE)] <- "FLOOD"
old_storms$EVTYPEN[grep("*HEAT*|*HOT*", old_storms$EVTYPE)] <- "HEAT"
old_storms$EVTYPEN[grep("*SURF*|*SEAS*|*MARINE*|*CURRENT*|*TSUNAMI", old_storms$EVTYPE)] <- "SURF"
old_storms$EVTYPEN[grep("*FOG*", old_storms$EVTYPE)] <- "FOG"
old_storms$EVTYPEN[grep("*DRY*|*DROUGHT*", old_storms$EVTYPE)] <- "DRY"
old_storms$EVTYPEN[grep("*LANDSLIDE*|*LAND*|*AVALANCHE*|*SLIDE*", old_storms$EVTYPE)] <- "LANDSLIDE"
old_storms$EVTYPEN[grep("*ICE*|*ICY*|*FROST*|SNOW*|*COLD*|*LOW TEMPERATURE*|*WINTRY*|*FREEZE*", old_storms$EVTYPE)] <- "COLD"
#storms <- na.omit(old_storms)
old_storms$lat <- as.numeric(as.character(old_storms$LATITUDE))/100.0
old_storms$long <- (as.numeric(old_storms$LONGITUDE)/100.0)*-1.0
#old_storms <-old_storms[old_storms$Year == 2010,]
#old_storms <- old_storms[old_storms$EVTYPE %in% c("TORNADO","HURRICANE","FLOOD","SNOW","FIRE","ICE"),]
#old_storms <-old_storms[old_storms$lat >0,]
#old_storms <-old_storms[old_storms$long != 0,]
storms <- old_storms[as.character(old_storms$STATE) %in% state.abb,]
storms <- storms[complete.cases(storms),]
rm(old_storms)
#grep "^.*[0-9]\{1,\}\/[0-9][0-9]\/20*" repdata-data-StormData.csv > 2000data.txt
#awk -F "," '{print $2,"\,",$7,"\,",$8,"\,",$23,"\,",$33,"\,",$34}' 2000data.txt > result.txt
#storms <- read.csv("repdata-data-StormData.csv",nrow=10000)
valid_events  <- c("TORNADO","FLOOD","STORM","COLD")
storms$EVTYPESTRING = paste(storms$EVTYPEN,storms$Date,"-")
storms <- storms[as.character(storms$EVTYPEN) %in% valid_events,]
table(storms$EVTYPEN)
stormsC <- storms[storms$EVTYPEN == "COLD",]
dim(stormsC)
head(stormsC,10)
shiny::runApp()
shiny::runApp()
